// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: proto/slot.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ESlotType int32

const (
	ESlotType_e_slot_type_mahjong ESlotType = 1 // 拉霸机-麻将
	ESlotType_e_slot_type_pharaoh ESlotType = 2 // 拉霸机-法老王
	ESlotType_e_slot_type_777     ESlotType = 3 // 拉霸机-777
)

// Enum value maps for ESlotType.
var (
	ESlotType_name = map[int32]string{
		1: "e_slot_type_mahjong",
		2: "e_slot_type_pharaoh",
		3: "e_slot_type_777",
	}
	ESlotType_value = map[string]int32{
		"e_slot_type_mahjong": 1,
		"e_slot_type_pharaoh": 2,
		"e_slot_type_777":     3,
	}
)

func (x ESlotType) Enum() *ESlotType {
	p := new(ESlotType)
	*p = x
	return p
}

func (x ESlotType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ESlotType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_slot_proto_enumTypes[0].Descriptor()
}

func (ESlotType) Type() protoreflect.EnumType {
	return &file_proto_slot_proto_enumTypes[0]
}

func (x ESlotType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ESlotType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ESlotType(num)
	return nil
}

// Deprecated: Use ESlotType.Descriptor instead.
func (ESlotType) EnumDescriptor() ([]byte, []int) {
	return file_proto_slot_proto_rawDescGZIP(), []int{0}
}

type ESlotBetType int32

const (
	ESlotBetType_e_slot_bet_type_0      ESlotBetType = 0
	ESlotBetType_e_slot_bet_type_1      ESlotBetType = 1
	ESlotBetType_e_slot_bet_type_2      ESlotBetType = 2
	ESlotBetType_e_slot_bet_type_3      ESlotBetType = 3
	ESlotBetType_e_slot_bet_type_4      ESlotBetType = 4
	ESlotBetType_e_slot_bet_type_5      ESlotBetType = 5
	ESlotBetType_e_slot_bet_type_6      ESlotBetType = 6
	ESlotBetType_e_slot_bet_type_7      ESlotBetType = 7
	ESlotBetType_e_slot_bet_type_wild   ESlotBetType = 8  // wild
	ESlotBetType_e_slot_bet_type_free   ESlotBetType = 9  // 免费符
	ESlotBetType_e_slot_bet_type_gold_0 ESlotBetType = 16 // 黄金牌0
	ESlotBetType_e_slot_bet_type_gold_1 ESlotBetType = 17 // 黄金牌1
	ESlotBetType_e_slot_bet_type_gold_2 ESlotBetType = 18 // 黄金牌2
	ESlotBetType_e_slot_bet_type_gold_3 ESlotBetType = 19 // 黄金牌3
	ESlotBetType_e_slot_bet_type_gold_4 ESlotBetType = 20 // 黄金牌4
	ESlotBetType_e_slot_bet_type_gold_5 ESlotBetType = 21 // 黄金牌5
	ESlotBetType_e_slot_bet_type_gold_6 ESlotBetType = 22 // 黄金牌6
	ESlotBetType_e_slot_bet_type_gold_7 ESlotBetType = 23 // 黄金牌7
)

// Enum value maps for ESlotBetType.
var (
	ESlotBetType_name = map[int32]string{
		0:  "e_slot_bet_type_0",
		1:  "e_slot_bet_type_1",
		2:  "e_slot_bet_type_2",
		3:  "e_slot_bet_type_3",
		4:  "e_slot_bet_type_4",
		5:  "e_slot_bet_type_5",
		6:  "e_slot_bet_type_6",
		7:  "e_slot_bet_type_7",
		8:  "e_slot_bet_type_wild",
		9:  "e_slot_bet_type_free",
		16: "e_slot_bet_type_gold_0",
		17: "e_slot_bet_type_gold_1",
		18: "e_slot_bet_type_gold_2",
		19: "e_slot_bet_type_gold_3",
		20: "e_slot_bet_type_gold_4",
		21: "e_slot_bet_type_gold_5",
		22: "e_slot_bet_type_gold_6",
		23: "e_slot_bet_type_gold_7",
	}
	ESlotBetType_value = map[string]int32{
		"e_slot_bet_type_0":      0,
		"e_slot_bet_type_1":      1,
		"e_slot_bet_type_2":      2,
		"e_slot_bet_type_3":      3,
		"e_slot_bet_type_4":      4,
		"e_slot_bet_type_5":      5,
		"e_slot_bet_type_6":      6,
		"e_slot_bet_type_7":      7,
		"e_slot_bet_type_wild":   8,
		"e_slot_bet_type_free":   9,
		"e_slot_bet_type_gold_0": 16,
		"e_slot_bet_type_gold_1": 17,
		"e_slot_bet_type_gold_2": 18,
		"e_slot_bet_type_gold_3": 19,
		"e_slot_bet_type_gold_4": 20,
		"e_slot_bet_type_gold_5": 21,
		"e_slot_bet_type_gold_6": 22,
		"e_slot_bet_type_gold_7": 23,
	}
)

func (x ESlotBetType) Enum() *ESlotBetType {
	p := new(ESlotBetType)
	*p = x
	return p
}

func (x ESlotBetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ESlotBetType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_slot_proto_enumTypes[1].Descriptor()
}

func (ESlotBetType) Type() protoreflect.EnumType {
	return &file_proto_slot_proto_enumTypes[1]
}

func (x ESlotBetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ESlotBetType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ESlotBetType(num)
	return nil
}

// Deprecated: Use ESlotBetType.Descriptor instead.
func (ESlotBetType) EnumDescriptor() ([]byte, []int) {
	return file_proto_slot_proto_rawDescGZIP(), []int{1}
}

// 进入房间
// @name enter_room
type M_1901Tos struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          *ESlotType             `protobuf:"varint,1,opt,name=type,enum=slot.ESlotType" json:"type,omitempty"` // 拉霸机场类型
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *M_1901Tos) Reset() {
	*x = M_1901Tos{}
	mi := &file_proto_slot_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *M_1901Tos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*M_1901Tos) ProtoMessage() {}

func (x *M_1901Tos) ProtoReflect() protoreflect.Message {
	mi := &file_proto_slot_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use M_1901Tos.ProtoReflect.Descriptor instead.
func (*M_1901Tos) Descriptor() ([]byte, []int) {
	return file_proto_slot_proto_rawDescGZIP(), []int{0}
}

func (x *M_1901Tos) GetType() ESlotType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ESlotType_e_slot_type_mahjong
}

type M_1901Toc struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BetVal        []uint32               `protobuf:"varint,1,rep,name=bet_val,json=betVal" json:"bet_val,omitempty"` // 下注档位
	Odds          []*PSlotOdds           `protobuf:"bytes,2,rep,name=odds" json:"odds,omitempty"`                    // 拉霸机赔率
	Cfg           *PConfig               `protobuf:"bytes,3,req,name=cfg" json:"cfg,omitempty"`                      // 配置
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *M_1901Toc) Reset() {
	*x = M_1901Toc{}
	mi := &file_proto_slot_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *M_1901Toc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*M_1901Toc) ProtoMessage() {}

func (x *M_1901Toc) ProtoReflect() protoreflect.Message {
	mi := &file_proto_slot_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use M_1901Toc.ProtoReflect.Descriptor instead.
func (*M_1901Toc) Descriptor() ([]byte, []int) {
	return file_proto_slot_proto_rawDescGZIP(), []int{1}
}

func (x *M_1901Toc) GetBetVal() []uint32 {
	if x != nil {
		return x.BetVal
	}
	return nil
}

func (x *M_1901Toc) GetOdds() []*PSlotOdds {
	if x != nil {
		return x.Odds
	}
	return nil
}

func (x *M_1901Toc) GetCfg() *PConfig {
	if x != nil {
		return x.Cfg
	}
	return nil
}

type PConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DevId         *string                `protobuf:"bytes,1,req,name=dev_id,json=devId" json:"dev_id,omitempty"`
	DevNo         *uint32                `protobuf:"varint,2,req,name=dev_no,json=devNo" json:"dev_no,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PConfig) Reset() {
	*x = PConfig{}
	mi := &file_proto_slot_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PConfig) ProtoMessage() {}

func (x *PConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_slot_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PConfig.ProtoReflect.Descriptor instead.
func (*PConfig) Descriptor() ([]byte, []int) {
	return file_proto_slot_proto_rawDescGZIP(), []int{2}
}

func (x *PConfig) GetDevId() string {
	if x != nil && x.DevId != nil {
		return *x.DevId
	}
	return ""
}

func (x *PConfig) GetDevNo() uint32 {
	if x != nil && x.DevNo != nil {
		return *x.DevNo
	}
	return 0
}

// 开始游戏
// @name start_game
type M_1902Tos struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BetVal        *uint32                `protobuf:"varint,1,req,name=bet_val,json=betVal" json:"bet_val,omitempty"` // 下注金额
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *M_1902Tos) Reset() {
	*x = M_1902Tos{}
	mi := &file_proto_slot_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *M_1902Tos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*M_1902Tos) ProtoMessage() {}

func (x *M_1902Tos) ProtoReflect() protoreflect.Message {
	mi := &file_proto_slot_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use M_1902Tos.ProtoReflect.Descriptor instead.
func (*M_1902Tos) Descriptor() ([]byte, []int) {
	return file_proto_slot_proto_rawDescGZIP(), []int{3}
}

func (x *M_1902Tos) GetBetVal() uint32 {
	if x != nil && x.BetVal != nil {
		return *x.BetVal
	}
	return 0
}

type M_1902Toc struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BetVal        *uint32                `protobuf:"varint,1,req,name=bet_val,json=betVal" json:"bet_val,omitempty"`                // 下注金额
	Win           *uint32                `protobuf:"varint,2,req,name=win" json:"win,omitempty"`                                    // 当前这手赢得金币
	TotalWin      *uint32                `protobuf:"varint,3,req,name=total_win,json=totalWin" json:"total_win,omitempty"`          // 总共赢得金币
	IsFree        *bool                  `protobuf:"varint,4,req,name=is_free,json=isFree" json:"is_free,omitempty"`                // 是否免费
	CurrentFree   *uint32                `protobuf:"varint,5,req,name=current_free,json=currentFree" json:"current_free,omitempty"` // 当前第几次免费
	TotalFree     *uint32                `protobuf:"varint,6,req,name=total_free,json=totalFree" json:"total_free,omitempty"`       // 总共免费次数
	Result        *PSlotResult           `protobuf:"bytes,7,req,name=result" json:"result,omitempty"`                               // 结果
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *M_1902Toc) Reset() {
	*x = M_1902Toc{}
	mi := &file_proto_slot_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *M_1902Toc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*M_1902Toc) ProtoMessage() {}

func (x *M_1902Toc) ProtoReflect() protoreflect.Message {
	mi := &file_proto_slot_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use M_1902Toc.ProtoReflect.Descriptor instead.
func (*M_1902Toc) Descriptor() ([]byte, []int) {
	return file_proto_slot_proto_rawDescGZIP(), []int{4}
}

func (x *M_1902Toc) GetBetVal() uint32 {
	if x != nil && x.BetVal != nil {
		return *x.BetVal
	}
	return 0
}

func (x *M_1902Toc) GetWin() uint32 {
	if x != nil && x.Win != nil {
		return *x.Win
	}
	return 0
}

func (x *M_1902Toc) GetTotalWin() uint32 {
	if x != nil && x.TotalWin != nil {
		return *x.TotalWin
	}
	return 0
}

func (x *M_1902Toc) GetIsFree() bool {
	if x != nil && x.IsFree != nil {
		return *x.IsFree
	}
	return false
}

func (x *M_1902Toc) GetCurrentFree() uint32 {
	if x != nil && x.CurrentFree != nil {
		return *x.CurrentFree
	}
	return 0
}

func (x *M_1902Toc) GetTotalFree() uint32 {
	if x != nil && x.TotalFree != nil {
		return *x.TotalFree
	}
	return 0
}

func (x *M_1902Toc) GetResult() *PSlotResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type PSlotResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Line1         []ESlotBetType         `protobuf:"varint,1,rep,name=line1,enum=slot.ESlotBetType" json:"line1,omitempty"` // 第一行
	Line2         []ESlotBetType         `protobuf:"varint,2,rep,name=line2,enum=slot.ESlotBetType" json:"line2,omitempty"` // 第二行
	Line3         []ESlotBetType         `protobuf:"varint,3,rep,name=line3,enum=slot.ESlotBetType" json:"line3,omitempty"` // 第三行
	Line4         []ESlotBetType         `protobuf:"varint,4,rep,name=line4,enum=slot.ESlotBetType" json:"line4,omitempty"` // 第四行
	Line5         []ESlotBetType         `protobuf:"varint,5,rep,name=line5,enum=slot.ESlotBetType" json:"line5,omitempty"` // 第五行
	Rewards       []*PSlotReward         `protobuf:"bytes,6,rep,name=rewards" json:"rewards,omitempty"`                     // 奖励
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PSlotResult) Reset() {
	*x = PSlotResult{}
	mi := &file_proto_slot_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PSlotResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PSlotResult) ProtoMessage() {}

func (x *PSlotResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_slot_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PSlotResult.ProtoReflect.Descriptor instead.
func (*PSlotResult) Descriptor() ([]byte, []int) {
	return file_proto_slot_proto_rawDescGZIP(), []int{5}
}

func (x *PSlotResult) GetLine1() []ESlotBetType {
	if x != nil {
		return x.Line1
	}
	return nil
}

func (x *PSlotResult) GetLine2() []ESlotBetType {
	if x != nil {
		return x.Line2
	}
	return nil
}

func (x *PSlotResult) GetLine3() []ESlotBetType {
	if x != nil {
		return x.Line3
	}
	return nil
}

func (x *PSlotResult) GetLine4() []ESlotBetType {
	if x != nil {
		return x.Line4
	}
	return nil
}

func (x *PSlotResult) GetLine5() []ESlotBetType {
	if x != nil {
		return x.Line5
	}
	return nil
}

func (x *PSlotResult) GetRewards() []*PSlotReward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type PSlotReward struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          *ESlotBetType          `protobuf:"varint,1,req,name=type,enum=slot.ESlotBetType" json:"type,omitempty"` // 奖励类型
	Val           *uint32                `protobuf:"varint,2,req,name=val" json:"val,omitempty"`                          // 奖励值
	Pos           []uint32               `protobuf:"varint,3,rep,name=pos" json:"pos,omitempty"`                          // 奖励位置
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PSlotReward) Reset() {
	*x = PSlotReward{}
	mi := &file_proto_slot_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PSlotReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PSlotReward) ProtoMessage() {}

func (x *PSlotReward) ProtoReflect() protoreflect.Message {
	mi := &file_proto_slot_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PSlotReward.ProtoReflect.Descriptor instead.
func (*PSlotReward) Descriptor() ([]byte, []int) {
	return file_proto_slot_proto_rawDescGZIP(), []int{6}
}

func (x *PSlotReward) GetType() ESlotBetType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ESlotBetType_e_slot_bet_type_0
}

func (x *PSlotReward) GetVal() uint32 {
	if x != nil && x.Val != nil {
		return *x.Val
	}
	return 0
}

func (x *PSlotReward) GetPos() []uint32 {
	if x != nil {
		return x.Pos
	}
	return nil
}

// 推送数据
// @name push_data
type M_1903Toc struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Coins         *uint32                `protobuf:"varint,1,req,name=coins" json:"coins,omitempty"`                          // 投币数
	Remain        *uint32                `protobuf:"varint,2,req,name=remain" json:"remain,omitempty"`                        // 余分
	DownCoins     *uint32                `protobuf:"varint,3,req,name=down_coins,json=downCoins" json:"down_coins,omitempty"` // 落币
	Jp1           *uint32                `protobuf:"varint,4,req,name=jp1" json:"jp1,omitempty"`                              // JP1
	Jp2           *uint32                `protobuf:"varint,5,req,name=jp2" json:"jp2,omitempty"`                              // JP2
	Jp3           *uint32                `protobuf:"varint,6,req,name=jp3" json:"jp3,omitempty"`                              // JP3
	JpAll         *uint32                `protobuf:"varint,7,req,name=jp_all,json=jpAll" json:"jp_all,omitempty"`             // JPALL
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *M_1903Toc) Reset() {
	*x = M_1903Toc{}
	mi := &file_proto_slot_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *M_1903Toc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*M_1903Toc) ProtoMessage() {}

func (x *M_1903Toc) ProtoReflect() protoreflect.Message {
	mi := &file_proto_slot_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use M_1903Toc.ProtoReflect.Descriptor instead.
func (*M_1903Toc) Descriptor() ([]byte, []int) {
	return file_proto_slot_proto_rawDescGZIP(), []int{7}
}

func (x *M_1903Toc) GetCoins() uint32 {
	if x != nil && x.Coins != nil {
		return *x.Coins
	}
	return 0
}

func (x *M_1903Toc) GetRemain() uint32 {
	if x != nil && x.Remain != nil {
		return *x.Remain
	}
	return 0
}

func (x *M_1903Toc) GetDownCoins() uint32 {
	if x != nil && x.DownCoins != nil {
		return *x.DownCoins
	}
	return 0
}

func (x *M_1903Toc) GetJp1() uint32 {
	if x != nil && x.Jp1 != nil {
		return *x.Jp1
	}
	return 0
}

func (x *M_1903Toc) GetJp2() uint32 {
	if x != nil && x.Jp2 != nil {
		return *x.Jp2
	}
	return 0
}

func (x *M_1903Toc) GetJp3() uint32 {
	if x != nil && x.Jp3 != nil {
		return *x.Jp3
	}
	return 0
}

func (x *M_1903Toc) GetJpAll() uint32 {
	if x != nil && x.JpAll != nil {
		return *x.JpAll
	}
	return 0
}

// 推送中 JP
// @name push_jp_reward
type M_1904Toc struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DevId         *string                `protobuf:"bytes,1,req,name=dev_id,json=devId" json:"dev_id,omitempty"`  // 设备 id
	DevNo         *uint32                `protobuf:"varint,2,req,name=dev_no,json=devNo" json:"dev_no,omitempty"` // 机台号
	Type          *uint32                `protobuf:"varint,3,req,name=type" json:"type,omitempty"`                // 1-4
	Jp            *uint32                `protobuf:"varint,4,req,name=jp" json:"jp,omitempty"`                    // 中 jp 值
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *M_1904Toc) Reset() {
	*x = M_1904Toc{}
	mi := &file_proto_slot_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *M_1904Toc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*M_1904Toc) ProtoMessage() {}

func (x *M_1904Toc) ProtoReflect() protoreflect.Message {
	mi := &file_proto_slot_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use M_1904Toc.ProtoReflect.Descriptor instead.
func (*M_1904Toc) Descriptor() ([]byte, []int) {
	return file_proto_slot_proto_rawDescGZIP(), []int{8}
}

func (x *M_1904Toc) GetDevId() string {
	if x != nil && x.DevId != nil {
		return *x.DevId
	}
	return ""
}

func (x *M_1904Toc) GetDevNo() uint32 {
	if x != nil && x.DevNo != nil {
		return *x.DevNo
	}
	return 0
}

func (x *M_1904Toc) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *M_1904Toc) GetJp() uint32 {
	if x != nil && x.Jp != nil {
		return *x.Jp
	}
	return 0
}

type PSlotOdds struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Odds          *uint32                `protobuf:"varint,1,req,name=odds" json:"odds,omitempty"` // 赔率
	Val           *uint32                `protobuf:"varint,2,req,name=val" json:"val,omitempty"`   // 下注值
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PSlotOdds) Reset() {
	*x = PSlotOdds{}
	mi := &file_proto_slot_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PSlotOdds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PSlotOdds) ProtoMessage() {}

func (x *PSlotOdds) ProtoReflect() protoreflect.Message {
	mi := &file_proto_slot_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PSlotOdds.ProtoReflect.Descriptor instead.
func (*PSlotOdds) Descriptor() ([]byte, []int) {
	return file_proto_slot_proto_rawDescGZIP(), []int{9}
}

func (x *PSlotOdds) GetOdds() uint32 {
	if x != nil && x.Odds != nil {
		return *x.Odds
	}
	return 0
}

func (x *PSlotOdds) GetVal() uint32 {
	if x != nil && x.Val != nil {
		return *x.Val
	}
	return 0
}

var File_proto_slot_proto protoreflect.FileDescriptor

const file_proto_slot_proto_rawDesc = "" +
	"\n" +
	"\x10proto/slot.proto\x12\x04slot\"3\n" +
	"\n" +
	"m_1901_tos\x12%\n" +
	"\x04type\x18\x01 \x01(\x0e2\x11.slot.e_slot_typeR\x04type\"n\n" +
	"\n" +
	"m_1901_toc\x12\x17\n" +
	"\abet_val\x18\x01 \x03(\rR\x06betVal\x12%\n" +
	"\x04odds\x18\x02 \x03(\v2\x11.slot.p_slot_oddsR\x04odds\x12 \n" +
	"\x03cfg\x18\x03 \x02(\v2\x0e.slot.p_configR\x03cfg\"8\n" +
	"\bp_config\x12\x15\n" +
	"\x06dev_id\x18\x01 \x02(\tR\x05devId\x12\x15\n" +
	"\x06dev_no\x18\x02 \x02(\rR\x05devNo\"%\n" +
	"\n" +
	"m_1902_tos\x12\x17\n" +
	"\abet_val\x18\x01 \x02(\rR\x06betVal\"\xdc\x01\n" +
	"\n" +
	"m_1902_toc\x12\x17\n" +
	"\abet_val\x18\x01 \x02(\rR\x06betVal\x12\x10\n" +
	"\x03win\x18\x02 \x02(\rR\x03win\x12\x1b\n" +
	"\ttotal_win\x18\x03 \x02(\rR\btotalWin\x12\x17\n" +
	"\ais_free\x18\x04 \x02(\bR\x06isFree\x12!\n" +
	"\fcurrent_free\x18\x05 \x02(\rR\vcurrentFree\x12\x1d\n" +
	"\n" +
	"total_free\x18\x06 \x02(\rR\ttotalFree\x12+\n" +
	"\x06result\x18\a \x02(\v2\x13.slot.p_slot_resultR\x06result\"\x9f\x02\n" +
	"\rp_slot_result\x12+\n" +
	"\x05line1\x18\x01 \x03(\x0e2\x15.slot.e_slot_bet_typeR\x05line1\x12+\n" +
	"\x05line2\x18\x02 \x03(\x0e2\x15.slot.e_slot_bet_typeR\x05line2\x12+\n" +
	"\x05line3\x18\x03 \x03(\x0e2\x15.slot.e_slot_bet_typeR\x05line3\x12+\n" +
	"\x05line4\x18\x04 \x03(\x0e2\x15.slot.e_slot_bet_typeR\x05line4\x12+\n" +
	"\x05line5\x18\x05 \x03(\x0e2\x15.slot.e_slot_bet_typeR\x05line5\x12-\n" +
	"\arewards\x18\x06 \x03(\v2\x13.slot.p_slot_rewardR\arewards\"^\n" +
	"\rp_slot_reward\x12)\n" +
	"\x04type\x18\x01 \x02(\x0e2\x15.slot.e_slot_bet_typeR\x04type\x12\x10\n" +
	"\x03val\x18\x02 \x02(\rR\x03val\x12\x10\n" +
	"\x03pos\x18\x03 \x03(\rR\x03pos\"\xa6\x01\n" +
	"\n" +
	"m_1903_toc\x12\x14\n" +
	"\x05coins\x18\x01 \x02(\rR\x05coins\x12\x16\n" +
	"\x06remain\x18\x02 \x02(\rR\x06remain\x12\x1d\n" +
	"\n" +
	"down_coins\x18\x03 \x02(\rR\tdownCoins\x12\x10\n" +
	"\x03jp1\x18\x04 \x02(\rR\x03jp1\x12\x10\n" +
	"\x03jp2\x18\x05 \x02(\rR\x03jp2\x12\x10\n" +
	"\x03jp3\x18\x06 \x02(\rR\x03jp3\x12\x15\n" +
	"\x06jp_all\x18\a \x02(\rR\x05jpAll\"^\n" +
	"\n" +
	"m_1904_toc\x12\x15\n" +
	"\x06dev_id\x18\x01 \x02(\tR\x05devId\x12\x15\n" +
	"\x06dev_no\x18\x02 \x02(\rR\x05devNo\x12\x12\n" +
	"\x04type\x18\x03 \x02(\rR\x04type\x12\x0e\n" +
	"\x02jp\x18\x04 \x02(\rR\x02jp\"3\n" +
	"\vp_slot_odds\x12\x12\n" +
	"\x04odds\x18\x01 \x02(\rR\x04odds\x12\x10\n" +
	"\x03val\x18\x02 \x02(\rR\x03val*T\n" +
	"\ve_slot_type\x12\x17\n" +
	"\x13e_slot_type_mahjong\x10\x01\x12\x17\n" +
	"\x13e_slot_type_pharaoh\x10\x02\x12\x13\n" +
	"\x0fe_slot_type_777\x10\x03*\xdd\x03\n" +
	"\x0fe_slot_bet_type\x12\x15\n" +
	"\x11e_slot_bet_type_0\x10\x00\x12\x15\n" +
	"\x11e_slot_bet_type_1\x10\x01\x12\x15\n" +
	"\x11e_slot_bet_type_2\x10\x02\x12\x15\n" +
	"\x11e_slot_bet_type_3\x10\x03\x12\x15\n" +
	"\x11e_slot_bet_type_4\x10\x04\x12\x15\n" +
	"\x11e_slot_bet_type_5\x10\x05\x12\x15\n" +
	"\x11e_slot_bet_type_6\x10\x06\x12\x15\n" +
	"\x11e_slot_bet_type_7\x10\a\x12\x18\n" +
	"\x14e_slot_bet_type_wild\x10\b\x12\x18\n" +
	"\x14e_slot_bet_type_free\x10\t\x12\x1a\n" +
	"\x16e_slot_bet_type_gold_0\x10\x10\x12\x1a\n" +
	"\x16e_slot_bet_type_gold_1\x10\x11\x12\x1a\n" +
	"\x16e_slot_bet_type_gold_2\x10\x12\x12\x1a\n" +
	"\x16e_slot_bet_type_gold_3\x10\x13\x12\x1a\n" +
	"\x16e_slot_bet_type_gold_4\x10\x14\x12\x1a\n" +
	"\x16e_slot_bet_type_gold_5\x10\x15\x12\x1a\n" +
	"\x16e_slot_bet_type_gold_6\x10\x16\x12\x1a\n" +
	"\x16e_slot_bet_type_gold_7\x10\x17B(Z&github.com/wfunc/slot-game/internal/pb"

var (
	file_proto_slot_proto_rawDescOnce sync.Once
	file_proto_slot_proto_rawDescData []byte
)

func file_proto_slot_proto_rawDescGZIP() []byte {
	file_proto_slot_proto_rawDescOnce.Do(func() {
		file_proto_slot_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_slot_proto_rawDesc), len(file_proto_slot_proto_rawDesc)))
	})
	return file_proto_slot_proto_rawDescData
}

var file_proto_slot_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_slot_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_slot_proto_goTypes = []any{
	(ESlotType)(0),      // 0: slot.e_slot_type
	(ESlotBetType)(0),   // 1: slot.e_slot_bet_type
	(*M_1901Tos)(nil),   // 2: slot.m_1901_tos
	(*M_1901Toc)(nil),   // 3: slot.m_1901_toc
	(*PConfig)(nil),     // 4: slot.p_config
	(*M_1902Tos)(nil),   // 5: slot.m_1902_tos
	(*M_1902Toc)(nil),   // 6: slot.m_1902_toc
	(*PSlotResult)(nil), // 7: slot.p_slot_result
	(*PSlotReward)(nil), // 8: slot.p_slot_reward
	(*M_1903Toc)(nil),   // 9: slot.m_1903_toc
	(*M_1904Toc)(nil),   // 10: slot.m_1904_toc
	(*PSlotOdds)(nil),   // 11: slot.p_slot_odds
}
var file_proto_slot_proto_depIdxs = []int32{
	0,  // 0: slot.m_1901_tos.type:type_name -> slot.e_slot_type
	11, // 1: slot.m_1901_toc.odds:type_name -> slot.p_slot_odds
	4,  // 2: slot.m_1901_toc.cfg:type_name -> slot.p_config
	7,  // 3: slot.m_1902_toc.result:type_name -> slot.p_slot_result
	1,  // 4: slot.p_slot_result.line1:type_name -> slot.e_slot_bet_type
	1,  // 5: slot.p_slot_result.line2:type_name -> slot.e_slot_bet_type
	1,  // 6: slot.p_slot_result.line3:type_name -> slot.e_slot_bet_type
	1,  // 7: slot.p_slot_result.line4:type_name -> slot.e_slot_bet_type
	1,  // 8: slot.p_slot_result.line5:type_name -> slot.e_slot_bet_type
	8,  // 9: slot.p_slot_result.rewards:type_name -> slot.p_slot_reward
	1,  // 10: slot.p_slot_reward.type:type_name -> slot.e_slot_bet_type
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_proto_slot_proto_init() }
func file_proto_slot_proto_init() {
	if File_proto_slot_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_slot_proto_rawDesc), len(file_proto_slot_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_slot_proto_goTypes,
		DependencyIndexes: file_proto_slot_proto_depIdxs,
		EnumInfos:         file_proto_slot_proto_enumTypes,
		MessageInfos:      file_proto_slot_proto_msgTypes,
	}.Build()
	File_proto_slot_proto = out.File
	file_proto_slot_proto_goTypes = nil
	file_proto_slot_proto_depIdxs = nil
}
